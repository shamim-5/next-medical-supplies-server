datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  productId    Json?
  name         String
  category     String
  description  String
  price        Int
  stock        Int
  manufacturer String
  imageURL     String
  avatarUrl    String

  reviews Review[]

  @@map("products")
}

model TopRatedProduct {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  category     String
  description  String
  price        Int
  stock        Int
  manufacturer String
  imageURL     String
  avatarUrl    String
  reviews       Review[]

  @@map("top-rated-products")
}

model Reagent {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  reagentId    Json?
  name         String
  category     String
  description  String
  price        Int
  stock        Int
  manufacturer String
  imageURL     String
  avatarUrl    String

  reviews Review[]

  @@map("reagents")
}

model Device {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  deviceId     Json?
  name         String
  category     String
  description  String
  price        Int
  stock        Int
  manufacturer String
  imageURL     String
  avatarUrl    String

  reviews Review[]

  @@map("devices")
}

model Consumable {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  consumableId Json?
  name         String
  category     String
  description  String
  price        Int
  stock        Int
  manufacturer String
  imageURL     String
  avatarUrl    String

  reviews Review[]

  @@map("consumables")
}

model MedicalEquipment {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  equipmentId  Json?
  name         String
  category     String
  description  String
  price        Int
  stock        Int
  manufacturer String
  imageURL     String
  avatarUrl    String

  reviews Review[]

  @@map("medical-equipments")
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  userName  String
  email     String
  status    Boolean
  active    Boolean
  paid      Boolean
  timestamp String
  order     Json[]

  @@map("cart-items")
}

model Order {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  userName  String
  email     String
  status    Boolean
  active    Boolean
  paid      Boolean
  timestamp String
  order     Json[]
  DueList   DueList[]

  @@map("orders")
}

model Review {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  rating   Int
  userName String
  email    String
  comment  String

  Product      Product?          @relation(fields: [productId], references: [id])
  productId    String?           @db.ObjectId
  Reagent      Reagent?          @relation(fields: [reagentId], references: [id])
  reagentId    String?           @db.ObjectId
  Device       Device?           @relation(fields: [deviceId], references: [id])
  deviceId     String?           @db.ObjectId
  Consumable   Consumable?       @relation(fields: [consumableId], references: [id])
  consumableId String?           @db.ObjectId
  Equipment    MedicalEquipment? @relation(fields: [equipmentId], references: [id])
  equipmentId  String?           @db.ObjectId
  topProduct   TopRatedProduct?  @relation(fields: [topProductId], references: [id])
  topProductId String?           @db.ObjectId

  @@map("reviews")
}

model Subscription {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String

  @@map("subscriptions")
}

model ShopDetail {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  partnerInfo    Json?
  shopName       Json?
  location       Json
  contact        Json
  specialOffers  Json
  openingHours   Json
  paymentMethods String[]
  website        String
  sliderImage    Json

  @@map("shop-details")
}

model UserDetail {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String       @unique
  phoneNumber Int?
  address     Json?
  fileUploads FileUpload[]

  @@map("user-details")
}

model DueList {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userName  String?
  email     String
  paid      Boolean?
  timestamp String?

  totalPrice    Int
  discount      Int
  discountPrice Int

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String @unique @db.ObjectId

  @@map("due-list")
}

model FileUpload {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  photoURL String

  UserDetail   UserDetail? @relation(fields: [userDetailId], references: [id])
  userDetailId String?     @db.ObjectId

  @@map("file-uploads")
}

model Home {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}
